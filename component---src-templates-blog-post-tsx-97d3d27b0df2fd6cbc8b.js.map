{"version":3,"file":"component---src-templates-blog-post-tsx-97d3d27b0df2fd6cbc8b.js","mappings":"+LAiBA,MA0DaA,EAAOC,IAId,IAHJC,MAAQC,eAAgBC,IAGzB,EACC,OACEC,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAIN,UAvEyBC,IAGD,IAFtBT,MAAM,SAAEU,EAAQ,KAAEC,EAAI,KAAEC,EAAMX,eAAgBC,GAAM,SACpDW,GACiB,EACjBC,QAAQC,IAAI,oBAAqBL,EAAUC,GAC3CG,QAAQC,IAAI,oBAAqBH,EAAMV,GACvC,MAAMc,EAAYd,EAAKI,YAAYD,OAAS,QAE5C,OACEF,EAAAA,cAACc,EAAAA,EAAM,CAACJ,SAAUA,EAAUR,MAAOW,GACjCb,EAAAA,cAAAA,UAAAA,CACEe,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETjB,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIkB,SAAS,YAAYnB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAAA,IAAAA,KAAID,EAAKI,YAAYgB,OAEvBnB,EAAAA,cAAAA,UAAAA,CACEoB,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCJ,SAAS,gBAEXlB,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAACuB,EAAAA,EAAG,QAGRvB,EAAAA,cAAAA,MAAAA,CAAKe,UAAU,iBACbf,EAAAA,cAAAA,KAAAA,CACEwB,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX7B,EAAAA,cAAAA,KAAAA,KACGO,GACCP,EAAAA,cAAC8B,EAAAA,KAAI,CAACC,GAAIxB,EAASyB,OAAOC,KAAMC,IAAI,QAAO,KACtC3B,EAASJ,YAAYD,QAI9BF,EAAAA,cAAAA,KAAAA,KACGQ,GACCR,EAAAA,cAAC8B,EAAAA,KAAI,CAACC,GAAIvB,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKL,YAAYD,MAAM,SAM3B,C","sources":["webpack://blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Link, graphql, PageProps } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport Seo from '../components/Seo'\n\n/**\n * https://blog.logrocket.com/set-up-typescript-gatsby-project-graphql/\n */\ntype Props = {\n  previous: any\n  next: any\n  site: any\n  markdownRemark: any\n}\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}: PageProps<Props>) => {\n  console.log('BlogPostTemplate:', previous, next)\n  console.log('BlogPostTemplate:', site, post)\n  const siteTitle = post.frontmatter.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({\n  data: { markdownRemark: post },\n}: {\n  data: { markdownRemark: any }\n}) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","previous","next","site","location","console","log","siteTitle","Layout","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}